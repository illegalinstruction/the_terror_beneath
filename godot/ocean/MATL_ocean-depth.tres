[gd_resource type="ShaderMaterial" load_steps=61 format=2]

[ext_resource path="res://ocean/ocean-height.png" type="Texture" id=1]
[ext_resource path="res://ocean/ocean-underwater-deform-y.png" type="Texture" id=2]
[ext_resource path="res://ocean/ocean-underwater-deform-x.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeTexture" id=28]
source = 1

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=30]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.005, 0.3, 0.95 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=36]

[sub_resource type="VisualShaderNodeTexture" id=38]
source = 4

[sub_resource type="VisualShaderNodeInput" id=42]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=43]

[sub_resource type="VisualShaderNodeScalarOp" id=44]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=45]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeTexture" id=47]
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=48]
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id=49]

[sub_resource type="VisualShaderNodeVectorOp" id=50]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.6, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=51]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.025, 0.025, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=55]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=56]
default_input_values = [ 0, 0.0, 1, 0.04825 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=57]
default_input_values = [ 0, 0.0, 1, -0.043 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=58]
default_input_values = [ 0, 0.0, 1, -0.038 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=59]
default_input_values = [ 0, 0.0, 1, 0.00185 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=60]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=61]

[sub_resource type="VisualShaderNodeVectorDecompose" id=62]

[sub_resource type="VisualShaderNodeScalarOp" id=63]

[sub_resource type="VisualShaderNodeScalarOp" id=64]

[sub_resource type="VisualShaderNodeVectorCompose" id=65]

[sub_resource type="VisualShaderNodeVectorCompose" id=66]

[sub_resource type="VisualShaderNodeScalarOp" id=67]

[sub_resource type="VisualShaderNodeScalarOp" id=68]

[sub_resource type="VisualShaderNodeScalarOp" id=69]
default_input_values = [ 0, 0.0, 1, 833.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=70]
operator = 5

[sub_resource type="VisualShaderNodeVectorOp" id=71]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=72]

[sub_resource type="VisualShaderNodeTexture" id=73]
source = 4

[sub_resource type="VisualShaderNodeScalarOp" id=74]
default_input_values = [ 0, 0.0, 1, 444.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=75]
operator = 5

[sub_resource type="VisualShaderNodeInput" id=76]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=77]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=78]
default_input_values = [ 0, 0.0, 1, 1.25 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=79]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 1.05 ]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=80]

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 0.1025 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=52]

[sub_resource type="VisualShaderNodeInput" id=53]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 0.1379 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=11]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=13]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[sub_resource type="VisualShader" id=54]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_vtx_4;
uniform sampler2D tex_frg_34 : hint_albedo;
uniform sampler2D tex_frg_33 : hint_albedo;



void vertex() {
// Input:10
	vec3 n_out10p0 = VERTEX;

// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out5p0.x;
	float n_out6p1 = n_out5p0.y;
	float n_out6p2 = n_out5p0.z;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:3
	float n_in3p1 = 0.13790;
	float n_out3p0 = n_out2p0 * n_in3p1;

// ScalarOp:7
	float n_out7p0 = n_out6p0 - n_out3p0;

// ScalarOp:11
	float n_in11p1 = 0.10250;
	float n_out11p0 = n_out2p0 * n_in11p1;

// ScalarOp:12
	float n_out12p0 = n_out6p1 + n_out11p0;

// VectorCompose:8
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_out7p0, n_out12p0, n_in8p2);

// Input:18
	vec3 n_out18p0 = VERTEX;

// VectorOp:17
	vec3 n_out17p0 = n_out8p0 + n_out18p0;

// Texture:4
	vec4 tex_vtx_4_read = texture(tex_vtx_4, n_out17p0.xy);
	vec3 n_out4p0 = tex_vtx_4_read.rgb;
	float n_out4p1 = tex_vtx_4_read.a;

// VectorDecompose:14
	float n_out14p0 = n_out4p0.x;
	float n_out14p1 = n_out4p0.y;
	float n_out14p2 = n_out4p0.z;

// ScalarOp:16
	float n_in16p1 = 3.00000;
	float n_out16p0 = n_out14p0 * n_in16p1;

// VectorCompose:15
	float n_in15p0 = 0.00000;
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_in15p0, n_out16p0, n_in15p2);

// VectorOp:13
	vec3 n_out13p0 = n_out10p0 + n_out15p0;

// Output:0
	VERTEX = n_out13p0;

}

void fragment() {
// Color:31
	vec3 n_out31p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out31p1 = 1.000000;

// Input:13
	vec3 n_out13p0 = vec3(SCREEN_UV, 0.0);

// Input:38
	float n_out38p0 = TIME;

// ScalarOp:39
	float n_in39p1 = 0.04825;
	float n_out39p0 = n_out38p0 * n_in39p1;

// Input:43
	vec3 n_out43p0 = vec3(UV, 0.0);

// VectorDecompose:44
	float n_out44p0 = n_out43p0.x;
	float n_out44p1 = n_out43p0.y;
	float n_out44p2 = n_out43p0.z;

// ScalarOp:46
	float n_out46p0 = n_out39p0 + n_out44p0;

// ScalarOp:40
	float n_in40p1 = -0.04300;
	float n_out40p0 = n_out38p0 * n_in40p1;

// ScalarOp:47
	float n_out47p0 = n_out40p0 + n_out44p1;

// VectorCompose:48
	float n_in48p2 = 0.00000;
	vec3 n_out48p0 = vec3(n_out46p0, n_out47p0, n_in48p2);

// Texture:34
	vec4 tex_frg_34_read = texture(tex_frg_34, n_out48p0.xy);
	vec3 n_out34p0 = tex_frg_34_read.rgb;
	float n_out34p1 = tex_frg_34_read.a;

// ScalarOp:41
	float n_in41p1 = -0.03800;
	float n_out41p0 = n_out38p0 * n_in41p1;

// VectorDecompose:45
	float n_out45p0 = n_out43p0.x;
	float n_out45p1 = n_out43p0.y;
	float n_out45p2 = n_out43p0.z;

// ScalarOp:50
	float n_out50p0 = n_out41p0 + n_out45p0;

// ScalarOp:42
	float n_in42p1 = 0.00185;
	float n_out42p0 = n_out38p0 * n_in42p1;

// ScalarOp:51
	float n_out51p0 = n_out42p0 + n_out45p1;

// VectorCompose:49
	float n_in49p2 = 0.00000;
	vec3 n_out49p0 = vec3(n_out50p0, n_out51p0, n_in49p2);

// Texture:33
	vec4 tex_frg_33_read = texture(tex_frg_33, n_out49p0.xy);
	vec3 n_out33p0 = tex_frg_33_read.rgb;
	float n_out33p1 = tex_frg_33_read.a;

// VectorOp:35
	vec3 n_out35p0 = n_out34p0 + n_out33p0;

// VectorOp:36
	vec3 n_in36p1 = vec3(0.60000, 0.50000, 0.00000);
	vec3 n_out36p0 = n_out35p0 - n_in36p1;

// VectorOp:37
	vec3 n_in37p1 = vec3(0.02500, 0.02500, 0.00000);
	vec3 n_out37p0 = n_out36p0 * n_in37p1;

// Input:59
	vec3 n_out59p0 = vec3(SCREEN_UV, 0.0);

// Texture:22
	float n_out22p0;
	float n_out22p1;
	{
		float _depth = texture(DEPTH_TEXTURE, n_out59p0.xy).r;
		n_out22p0 = _depth;
		n_out22p1 = 1.0;
	}

// ScalarOp:52
	float n_in52p1 = 833.00000;
	float n_out52p0 = n_out22p0 * n_in52p1;

// ScalarOp:53
	float n_out53p0 = pow(n_out22p0, n_out52p0);

// Input:27
	vec3 n_out27p0 = vec3(UV, 0.0);

// VectorDecompose:28
	float n_out28p0 = n_out27p0.x;
	float n_out28p1 = n_out27p0.y;
	float n_out28p2 = n_out27p0.z;

// ScalarOp:61
	float n_in61p1 = 1.25000;
	float n_out61p0 = n_out28p1 * n_in61p1;

// ScalarOp:30
	float n_out30p0 = n_out53p0 * n_out61p0;

// VectorOp:54
	vec3 n_out54p0 = n_out37p0 * vec3(n_out30p0);

// VectorOp:20
	vec3 n_out20p0 = n_out13p0 + n_out54p0;

// Texture:12
	vec3 n_out12p0;
	float n_out12p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out20p0.xy, 0.0);
		n_out12p0 = _tex_read.rgb;
		n_out12p1 = _tex_read.a;
	}

// VectorOp:14
	vec3 n_in14p1 = vec3(0.00500, 0.30000, 0.95000);
	vec3 n_out14p0 = n_out12p0 * n_in14p1;

// ScalarClamp:62
	float n_in62p1 = 0.00000;
	float n_in62p2 = 1.05000;
	float n_out62p0 = clamp(n_out30p0, n_in62p1, n_in62p2);

// VectorScalarMix:63
	vec3 n_out63p0 = mix(n_out12p0, n_out14p0, n_out62p0);

// Output:0
	ALBEDO = n_out31p0;
	EMISSION = n_out63p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -2349.56, -582.236 )
nodes/vertex/0/position = Vector2( 680, -80 )
nodes/vertex/2/node = SubResource( 9 )
nodes/vertex/2/position = Vector2( -1020, 360 )
nodes/vertex/3/node = SubResource( 10 )
nodes/vertex/3/position = Vector2( -820, 340 )
nodes/vertex/4/node = SubResource( 11 )
nodes/vertex/4/position = Vector2( -580, -260 )
nodes/vertex/5/node = SubResource( 12 )
nodes/vertex/5/position = Vector2( -1140, -40 )
nodes/vertex/6/node = SubResource( 13 )
nodes/vertex/6/position = Vector2( -800, 140 )
nodes/vertex/7/node = SubResource( 14 )
nodes/vertex/7/position = Vector2( -440, 100 )
nodes/vertex/8/node = SubResource( 15 )
nodes/vertex/8/position = Vector2( -180, 140 )
nodes/vertex/10/node = SubResource( 2 )
nodes/vertex/10/position = Vector2( -680, -400 )
nodes/vertex/11/node = SubResource( 3 )
nodes/vertex/11/position = Vector2( -820, 440 )
nodes/vertex/12/node = SubResource( 4 )
nodes/vertex/12/position = Vector2( -440, 200 )
nodes/vertex/13/node = SubResource( 5 )
nodes/vertex/13/position = Vector2( 60, -360 )
nodes/vertex/14/node = SubResource( 6 )
nodes/vertex/14/position = Vector2( -401.865, -99.7495 )
nodes/vertex/15/node = SubResource( 7 )
nodes/vertex/15/position = Vector2( -140, -120 )
nodes/vertex/16/node = SubResource( 8 )
nodes/vertex/16/position = Vector2( -260, -240 )
nodes/vertex/17/node = SubResource( 52 )
nodes/vertex/17/position = Vector2( -1020, -240 )
nodes/vertex/18/node = SubResource( 53 )
nodes/vertex/18/position = Vector2( -1260, -240 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 4, 0, 14, 0, 15, 0, 13, 1, 10, 0, 13, 0, 13, 0, 0, 0, 14, 0, 16, 0, 16, 0, 15, 1, 2, 0, 11, 0, 11, 0, 12, 1, 6, 1, 12, 0, 6, 0, 7, 0, 3, 0, 7, 1, 7, 0, 8, 0, 12, 0, 8, 1, 18, 0, 17, 1, 5, 0, 6, 0, 17, 0, 4, 0, 8, 0, 17, 0 )
nodes/fragment/0/position = Vector2( 600, -80 )
nodes/fragment/12/node = SubResource( 28 )
nodes/fragment/12/position = Vector2( -240, -40 )
nodes/fragment/13/node = SubResource( 29 )
nodes/fragment/13/position = Vector2( -1180, -20 )
nodes/fragment/14/node = SubResource( 30 )
nodes/fragment/14/position = Vector2( 100, -100 )
nodes/fragment/20/node = SubResource( 36 )
nodes/fragment/20/position = Vector2( -440, -40 )
nodes/fragment/22/node = SubResource( 38 )
nodes/fragment/22/position = Vector2( -1680, -112 )
nodes/fragment/27/node = SubResource( 42 )
nodes/fragment/27/position = Vector2( -1180, 360 )
nodes/fragment/28/node = SubResource( 43 )
nodes/fragment/28/position = Vector2( -912, 320 )
nodes/fragment/30/node = SubResource( 44 )
nodes/fragment/30/position = Vector2( -700, 20 )
nodes/fragment/31/node = SubResource( 45 )
nodes/fragment/31/position = Vector2( 420, -120 )
nodes/fragment/33/node = SubResource( 47 )
nodes/fragment/33/position = Vector2( -740, -1220 )
nodes/fragment/34/node = SubResource( 48 )
nodes/fragment/34/position = Vector2( -740, -1440 )
nodes/fragment/35/node = SubResource( 49 )
nodes/fragment/35/position = Vector2( -500, -1280 )
nodes/fragment/36/node = SubResource( 50 )
nodes/fragment/36/position = Vector2( -320, -1280 )
nodes/fragment/37/node = SubResource( 51 )
nodes/fragment/37/position = Vector2( -120, -1280 )
nodes/fragment/38/node = SubResource( 55 )
nodes/fragment/38/position = Vector2( -1820, -1220 )
nodes/fragment/39/node = SubResource( 56 )
nodes/fragment/39/position = Vector2( -1520, -1420 )
nodes/fragment/40/node = SubResource( 57 )
nodes/fragment/40/position = Vector2( -1520, -1320 )
nodes/fragment/41/node = SubResource( 58 )
nodes/fragment/41/position = Vector2( -1520, -1120 )
nodes/fragment/42/node = SubResource( 59 )
nodes/fragment/42/position = Vector2( -1520, -1020 )
nodes/fragment/43/node = SubResource( 60 )
nodes/fragment/43/position = Vector2( -1820, -920 )
nodes/fragment/44/node = SubResource( 61 )
nodes/fragment/44/position = Vector2( -1520, -1220 )
nodes/fragment/45/node = SubResource( 62 )
nodes/fragment/45/position = Vector2( -1520, -920 )
nodes/fragment/46/node = SubResource( 63 )
nodes/fragment/46/position = Vector2( -1220, -1420 )
nodes/fragment/47/node = SubResource( 64 )
nodes/fragment/47/position = Vector2( -1220, -1320 )
nodes/fragment/48/node = SubResource( 65 )
nodes/fragment/48/position = Vector2( -1000, -1360 )
nodes/fragment/49/node = SubResource( 66 )
nodes/fragment/49/position = Vector2( -1020, -1060 )
nodes/fragment/50/node = SubResource( 67 )
nodes/fragment/50/position = Vector2( -1220, -1120 )
nodes/fragment/51/node = SubResource( 68 )
nodes/fragment/51/position = Vector2( -1220, -1020 )
nodes/fragment/52/node = SubResource( 69 )
nodes/fragment/52/position = Vector2( -1632, 256 )
nodes/fragment/53/node = SubResource( 70 )
nodes/fragment/53/position = Vector2( -1420, 240 )
nodes/fragment/54/node = SubResource( 71 )
nodes/fragment/54/position = Vector2( -352, -448 )
nodes/fragment/55/node = SubResource( 72 )
nodes/fragment/55/position = Vector2( -1232, -352 )
nodes/fragment/56/node = SubResource( 73 )
nodes/fragment/56/position = Vector2( -2064, -592 )
nodes/fragment/57/node = SubResource( 74 )
nodes/fragment/57/position = Vector2( -2016, -432 )
nodes/fragment/58/node = SubResource( 75 )
nodes/fragment/58/position = Vector2( -1792, -432 )
nodes/fragment/59/node = SubResource( 76 )
nodes/fragment/59/position = Vector2( -2304, -544 )
nodes/fragment/60/node = SubResource( 77 )
nodes/fragment/60/position = Vector2( -1056, -480 )
nodes/fragment/61/node = SubResource( 78 )
nodes/fragment/61/position = Vector2( -752, 304 )
nodes/fragment/62/node = SubResource( 79 )
nodes/fragment/62/position = Vector2( -384, 112 )
nodes/fragment/63/node = SubResource( 80 )
nodes/fragment/63/position = Vector2( 32, 144 )
nodes/fragment/connections = PoolIntArray( 12, 0, 14, 0, 13, 0, 20, 0, 20, 0, 12, 0, 27, 0, 28, 0, 31, 0, 0, 0, 34, 0, 35, 0, 33, 0, 35, 1, 35, 0, 36, 0, 36, 0, 37, 0, 38, 0, 39, 0, 38, 0, 40, 0, 38, 0, 41, 0, 38, 0, 42, 0, 43, 0, 44, 0, 43, 0, 45, 0, 44, 0, 46, 1, 39, 0, 46, 0, 40, 0, 47, 0, 44, 1, 47, 1, 46, 0, 48, 0, 47, 0, 48, 1, 48, 0, 34, 0, 41, 0, 50, 0, 45, 0, 50, 1, 42, 0, 51, 0, 45, 1, 51, 1, 51, 0, 49, 1, 50, 0, 49, 0, 49, 0, 33, 0, 22, 0, 52, 0, 22, 0, 53, 0, 52, 0, 53, 1, 37, 0, 54, 0, 54, 0, 20, 1, 13, 0, 55, 1, 56, 0, 57, 0, 56, 0, 58, 0, 57, 0, 58, 1, 59, 0, 56, 0, 60, 0, 55, 0, 58, 0, 60, 1, 37, 0, 60, 0, 28, 1, 61, 0, 61, 0, 30, 1, 30, 0, 62, 0, 62, 0, 63, 2, 14, 0, 63, 1, 12, 0, 63, 0, 63, 0, 0, 5, 30, 0, 54, 1, 53, 0, 30, 0, 59, 0, 22, 0 )

[resource]
resource_local_to_scene = true
shader = SubResource( 54 )
shader_param/tex_vtx_4 = ExtResource( 1 )
shader_param/tex_frg_34 = ExtResource( 3 )
shader_param/tex_frg_33 = ExtResource( 2 )
