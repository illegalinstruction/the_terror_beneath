[gd_resource type="VisualShader" load_steps=39 format=2]

[sub_resource type="VisualShaderNodeVectorFunc" id=26]

[sub_resource type="VisualShaderNodeTexture" id=28]
source = 1

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorOp" id=30]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.005, 0.3, 0.95 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=35]
input_name = "normal"

[sub_resource type="VisualShaderNodeScalarConstant" id=19]

[sub_resource type="VisualShaderNodeVectorOp" id=36]

[sub_resource type="VisualShaderNodeVectorOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=38]
source = 4

[sub_resource type="VisualShaderNodeVectorCompose" id=39]

[sub_resource type="VisualShaderNodeScalarOp" id=40]
default_input_values = [ 0, 1.0, 1, 1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=42]
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=43]
constant = Color( 0, 0, 0, 1 )

[sub_resource type="VisualShaderNodeInput" id=31]
input_name = "normal"

[sub_resource type="VisualShaderNodeTransformVecMult" id=32]

[sub_resource type="VisualShaderNodeVectorDecompose" id=33]

[sub_resource type="VisualShaderNodeInput" id=34]
input_name = "camera"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 0.1025 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.85 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeVectorCompose" id=22]

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, -1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=44]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.8, 0.8, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 0.1379 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=11]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=13]

[sub_resource type="VisualShaderNodeScalarOp" id=14]

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[sub_resource type="VisualShaderNodeTexture" id=16]

[resource]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx, async_visible;

uniform sampler2D tex_vtx_4;
uniform sampler2D tex_vtx_9;



void vertex() {
// Input:10
	vec3 n_out10p0 = VERTEX;

// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorOp:22
	vec3 n_in22p1 = vec3(0.80000, 0.80000, 0.00000);
	vec3 n_out22p0 = n_out5p0 * n_in22p1;

// VectorDecompose:6
	float n_out6p0 = n_out22p0.x;
	float n_out6p1 = n_out22p0.y;
	float n_out6p2 = n_out22p0.z;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:3
	float n_in3p1 = 0.13790;
	float n_out3p0 = n_out2p0 * n_in3p1;

// ScalarOp:7
	float n_out7p0 = n_out6p0 + n_out3p0;

// ScalarOp:11
	float n_in11p1 = 0.10250;
	float n_out11p0 = n_out2p0 * n_in11p1;

// ScalarOp:12
	float n_out12p0 = n_out6p1 + n_out11p0;

// VectorCompose:8
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_out7p0, n_out12p0, n_in8p2);

// Texture:4
	vec4 tex_vtx_4_read = texture(tex_vtx_4, n_out8p0.xy);
	vec3 n_out4p0 = tex_vtx_4_read.rgb;
	float n_out4p1 = tex_vtx_4_read.a;

// VectorDecompose:14
	float n_out14p0 = n_out4p0.x;
	float n_out14p1 = n_out4p0.y;
	float n_out14p2 = n_out4p0.z;

// VectorCompose:15
	float n_in15p0 = 0.00000;
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_in15p0, n_out14p0, n_in15p2);

// VectorOp:13
	vec3 n_out13p0 = n_out10p0 + n_out15p0;

// Texture:9
	vec4 tex_vtx_9_read = texture(tex_vtx_9, n_out8p0.xy);
	vec3 n_out9p0 = tex_vtx_9_read.rgb;
	float n_out9p1 = tex_vtx_9_read.a;

// VectorDecompose:17
	float n_out17p0 = n_out9p0.x;
	float n_out17p1 = n_out9p0.y;
	float n_out17p2 = n_out9p0.z;

// ScalarOp:19
	float n_in19p1 = -1.00000;
	float n_out19p0 = n_out17p2 * n_in19p1;

// VectorCompose:18
	vec3 n_out18p0 = vec3(n_out17p0, n_out19p0, n_out17p1);

// VectorOp:20
	vec3 n_in20p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out20p0 = n_out18p0 - n_in20p1;

// VectorOp:21
	vec3 n_in21p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out21p0 = n_out20p0 * n_in21p1;

// Output:0
	VERTEX = n_out13p0;
	NORMAL = n_out21p0;

}

void fragment() {
// Color:27
	vec3 n_out27p0 = vec3(0.000000, 0.000000, 0.000000);
	float n_out27p1 = 1.000000;

// Input:9
	mat4 n_out9p0 = CAMERA_MATRIX;

// Input:5
	vec3 n_out5p0 = NORMAL;

// TransformVectorMult:6
	vec3 n_out6p0 = (n_out9p0 * vec4(n_out5p0, 1.0)).xyz;

// VectorFunc:10
	vec3 n_out10p0 = normalize(n_out6p0);

// VectorDecompose:7
	float n_out7p0 = n_out10p0.x;
	float n_out7p1 = n_out10p0.y;
	float n_out7p2 = n_out10p0.z;

// Scalar:2
	float n_out2p0 = 0.000000;

// Output:0
	ALBEDO = n_out27p0;
	METALLIC = n_out7p0;
	ROUGHNESS = n_out2p0;
	EMISSION = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -269.08, 146.154 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 680, -80 )
nodes/vertex/2/node = SubResource( 9 )
nodes/vertex/2/position = Vector2( -1020, 360 )
nodes/vertex/3/node = SubResource( 10 )
nodes/vertex/3/position = Vector2( -820, 340 )
nodes/vertex/4/node = SubResource( 11 )
nodes/vertex/4/position = Vector2( -580, -260 )
nodes/vertex/5/node = SubResource( 12 )
nodes/vertex/5/position = Vector2( -1200, 80 )
nodes/vertex/6/node = SubResource( 13 )
nodes/vertex/6/position = Vector2( -800, 140 )
nodes/vertex/7/node = SubResource( 14 )
nodes/vertex/7/position = Vector2( -440, 100 )
nodes/vertex/8/node = SubResource( 15 )
nodes/vertex/8/position = Vector2( -180, 140 )
nodes/vertex/9/node = SubResource( 16 )
nodes/vertex/9/position = Vector2( 60, 240 )
nodes/vertex/10/node = SubResource( 2 )
nodes/vertex/10/position = Vector2( -680, -400 )
nodes/vertex/11/node = SubResource( 3 )
nodes/vertex/11/position = Vector2( -820, 440 )
nodes/vertex/12/node = SubResource( 4 )
nodes/vertex/12/position = Vector2( -440, 200 )
nodes/vertex/13/node = SubResource( 5 )
nodes/vertex/13/position = Vector2( 80, -340 )
nodes/vertex/14/node = SubResource( 6 )
nodes/vertex/14/position = Vector2( -400, -140 )
nodes/vertex/15/node = SubResource( 7 )
nodes/vertex/15/position = Vector2( -140, -120 )
nodes/vertex/16/node = SubResource( 8 )
nodes/vertex/16/position = Vector2( -260, -240 )
nodes/vertex/17/node = SubResource( 21 )
nodes/vertex/17/position = Vector2( 280, 400 )
nodes/vertex/18/node = SubResource( 22 )
nodes/vertex/18/position = Vector2( 780, 340 )
nodes/vertex/19/node = SubResource( 23 )
nodes/vertex/19/position = Vector2( 560, 380 )
nodes/vertex/20/node = SubResource( 24 )
nodes/vertex/20/position = Vector2( 1012.35, 380.836 )
nodes/vertex/21/node = SubResource( 25 )
nodes/vertex/21/position = Vector2( 260, 20 )
nodes/vertex/22/node = SubResource( 44 )
nodes/vertex/22/position = Vector2( -1002.51, 85.0995 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 6, 0, 7, 0, 3, 0, 7, 1, 7, 0, 8, 0, 8, 0, 4, 0, 8, 0, 9, 0, 2, 0, 11, 0, 11, 0, 12, 1, 12, 0, 8, 1, 6, 1, 12, 0, 4, 0, 14, 0, 15, 0, 13, 1, 13, 0, 0, 0, 14, 0, 16, 0, 9, 0, 17, 0, 17, 2, 19, 0, 19, 0, 18, 1, 17, 0, 18, 0, 17, 1, 18, 2, 18, 0, 20, 0, 20, 0, 21, 0, 21, 0, 0, 1, 10, 0, 13, 0, 5, 0, 22, 0, 22, 0, 6, 0, 14, 0, 15, 1 )
nodes/fragment/2/node = SubResource( 19 )
nodes/fragment/2/position = Vector2( 160, 320 )
nodes/fragment/5/node = SubResource( 31 )
nodes/fragment/5/position = Vector2( -660, 180 )
nodes/fragment/6/node = SubResource( 32 )
nodes/fragment/6/position = Vector2( -360, 100 )
nodes/fragment/7/node = SubResource( 33 )
nodes/fragment/7/position = Vector2( 140, 180 )
nodes/fragment/9/node = SubResource( 34 )
nodes/fragment/9/position = Vector2( -660, 100 )
nodes/fragment/10/node = SubResource( 26 )
nodes/fragment/10/position = Vector2( -140, 160 )
nodes/fragment/12/node = SubResource( 28 )
nodes/fragment/12/position = Vector2( 100, -360 )
nodes/fragment/13/node = SubResource( 29 )
nodes/fragment/13/position = Vector2( -800, -540 )
nodes/fragment/14/node = SubResource( 30 )
nodes/fragment/14/position = Vector2( 380, -380 )
nodes/fragment/15/node = SubResource( 35 )
nodes/fragment/15/position = Vector2( -620, -440 )
nodes/fragment/20/node = SubResource( 36 )
nodes/fragment/20/position = Vector2( -140, -520 )
nodes/fragment/21/node = SubResource( 37 )
nodes/fragment/21/position = Vector2( -200, -380 )
nodes/fragment/22/node = SubResource( 38 )
nodes/fragment/22/position = Vector2( -1080, -360 )
nodes/fragment/23/node = SubResource( 39 )
nodes/fragment/23/position = Vector2( -440, -340 )
nodes/fragment/24/node = SubResource( 40 )
nodes/fragment/24/position = Vector2( -900, -360 )
nodes/fragment/26/node = SubResource( 42 )
nodes/fragment/26/position = Vector2( -680, -320 )
nodes/fragment/27/node = SubResource( 43 )
nodes/fragment/27/position = Vector2( 220, 100 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 1, 9, 0, 6, 0, 6, 0, 10, 0, 10, 0, 7, 0, 12, 0, 14, 0, 13, 0, 20, 0, 20, 0, 12, 0, 13, 0, 22, 0, 21, 0, 20, 1, 23, 0, 21, 1, 15, 0, 21, 0, 22, 0, 24, 1, 24, 0, 26, 0, 26, 0, 23, 0, 26, 0, 23, 1, 26, 0, 23, 2, 7, 0, 0, 2, 2, 0, 0, 3, 27, 0, 0, 0, 27, 0, 0, 5 )
