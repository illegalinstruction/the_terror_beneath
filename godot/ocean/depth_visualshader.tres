[gd_resource type="VisualShader" load_steps=60 format=2]

[ext_resource path="res://ocean/ocean-underwater-deform-x.png" type="Texture" id=1]
[ext_resource path="res://ocean/ocean-underwater-deform-y.png" type="Texture" id=2]
[ext_resource path="res://ocean/fog_gradient.png" type="Texture" id=3]
[ext_resource path="res://ocean/mult_gradient.png" type="Texture" id=4]

[sub_resource type="VisualShaderNodeInput" id=29]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=38]
source = 4

[sub_resource type="VisualShaderNodeScalarConstant" id=45]

[sub_resource type="VisualShaderNodeScalarConstant" id=46]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=48]
output_port_for_preview = 0
default_input_values = [ 0, 2.0, 1, 0.0 ]
operator = 5

[sub_resource type="VisualShaderNodeTexture" id=49]
source = 1

[sub_resource type="VisualShaderNodeTexture" id=50]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=51]
output_port_for_preview = 0
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=52]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=53]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=54]
default_input_values = [ 0, 0.0, 1, 0.131397 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=55]
default_input_values = [ 0, 0.0, 1, -0.1344 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=56]
default_input_values = [ 0, 0.0, 1, -0.0777 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=57]
default_input_values = [ 0, 0.0, 1, -0.062138 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=58]

[sub_resource type="VisualShaderNodeVectorCompose" id=59]

[sub_resource type="VisualShaderNodeVectorCompose" id=60]

[sub_resource type="VisualShaderNodeVectorOp" id=61]

[sub_resource type="VisualShaderNodeVectorOp" id=62]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=63]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=64]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.125, 0.125, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=65]

[sub_resource type="VisualShaderNodeTexture" id=66]
output_port_for_preview = 0
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=67]
output_port_for_preview = 0
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=68]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=69]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=70]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.028, 0.028, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=71]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 55.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=72]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 1250.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=73]
output_port_for_preview = 0
default_input_values = [ 0, 2.0, 1, 0.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=74]
default_input_values = [ 0, 0.0, 1, 456.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=75]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 1250.0 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarOp" id=76]
default_input_values = [ 0, 0.0, 1, 225.0 ]
operator = 5

[sub_resource type="VisualShaderNodeVectorOp" id=77]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 0.1025 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeVectorOp" id=5]

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.85 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeVectorCompose" id=22]

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, -1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=44]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.8, 0.8, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 0.1379 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=11]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=13]

[sub_resource type="VisualShaderNodeScalarOp" id=14]

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[sub_resource type="VisualShaderNodeTexture" id=16]

[resource]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx, async_visible;

uniform sampler2D tex_vtx_4;
uniform sampler2D tex_vtx_9;
uniform sampler2D tex_frg_33;
uniform sampler2D tex_frg_34;
uniform sampler2D tex_frg_49;
uniform sampler2D tex_frg_50;



void vertex() {
// Input:10
	vec3 n_out10p0 = VERTEX;

// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorOp:22
	vec3 n_in22p1 = vec3(0.80000, 0.80000, 0.00000);
	vec3 n_out22p0 = n_out5p0 * n_in22p1;

// VectorDecompose:6
	float n_out6p0 = n_out22p0.x;
	float n_out6p1 = n_out22p0.y;
	float n_out6p2 = n_out22p0.z;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:3
	float n_in3p1 = 0.13790;
	float n_out3p0 = n_out2p0 * n_in3p1;

// ScalarOp:7
	float n_out7p0 = n_out6p0 + n_out3p0;

// ScalarOp:11
	float n_in11p1 = 0.10250;
	float n_out11p0 = n_out2p0 * n_in11p1;

// ScalarOp:12
	float n_out12p0 = n_out6p1 + n_out11p0;

// VectorCompose:8
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_out7p0, n_out12p0, n_in8p2);

// Texture:4
	vec4 tex_vtx_4_read = texture(tex_vtx_4, n_out8p0.xy);
	vec3 n_out4p0 = tex_vtx_4_read.rgb;
	float n_out4p1 = tex_vtx_4_read.a;

// VectorDecompose:14
	float n_out14p0 = n_out4p0.x;
	float n_out14p1 = n_out4p0.y;
	float n_out14p2 = n_out4p0.z;

// VectorCompose:15
	float n_in15p0 = 0.00000;
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_in15p0, n_out14p0, n_in15p2);

// VectorOp:13
	vec3 n_out13p0 = n_out10p0 + n_out15p0;

// Texture:9
	vec4 tex_vtx_9_read = texture(tex_vtx_9, n_out8p0.xy);
	vec3 n_out9p0 = tex_vtx_9_read.rgb;
	float n_out9p1 = tex_vtx_9_read.a;

// VectorDecompose:17
	float n_out17p0 = n_out9p0.x;
	float n_out17p1 = n_out9p0.y;
	float n_out17p2 = n_out9p0.z;

// ScalarOp:19
	float n_in19p1 = -1.00000;
	float n_out19p0 = n_out17p2 * n_in19p1;

// VectorCompose:18
	vec3 n_out18p0 = vec3(n_out17p0, n_out19p0, n_out17p1);

// VectorOp:20
	vec3 n_in20p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out20p0 = n_out18p0 - n_in20p1;

// VectorOp:21
	vec3 n_in21p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out21p0 = n_out20p0 * n_in21p1;

// Output:0
	VERTEX = n_out13p0;
	NORMAL = n_out21p0;

}

void fragment() {
// Scalar:28
	float n_out28p0 = 0.000000;

// Scalar:29
	float n_out29p0 = 1.000000;

// Input:13
	vec3 n_out13p0 = vec3(SCREEN_UV, 0.0);

// Input:35
	vec3 n_out35p0 = vec3(UV, 0.0);

// Input:36
	float n_out36p0 = TIME;

// ScalarOp:37
	float n_in37p1 = 0.13140;
	float n_out37p0 = n_out36p0 * n_in37p1;

// ScalarOp:38
	float n_in38p1 = -0.13440;
	float n_out38p0 = n_out36p0 * n_in38p1;

// VectorCompose:42
	float n_in42p2 = 0.00000;
	vec3 n_out42p0 = vec3(n_out37p0, n_out38p0, n_in42p2);

// VectorOp:41
	vec3 n_out41p0 = n_out35p0 + n_out42p0;

// Texture:33
	vec4 tex_frg_33_read = texture(tex_frg_33, n_out41p0.xy);
	vec3 n_out33p0 = tex_frg_33_read.rgb;
	float n_out33p1 = tex_frg_33_read.a;

// ScalarOp:39
	float n_in39p1 = -0.07770;
	float n_out39p0 = n_out36p0 * n_in39p1;

// ScalarOp:40
	float n_in40p1 = -0.06214;
	float n_out40p0 = n_out36p0 * n_in40p1;

// VectorCompose:43
	float n_in43p2 = 0.00000;
	vec3 n_out43p0 = vec3(n_out39p0, n_out40p0, n_in43p2);

// VectorOp:44
	vec3 n_out44p0 = n_out35p0 + n_out43p0;

// Texture:34
	vec4 tex_frg_34_read = texture(tex_frg_34, n_out44p0.xy);
	vec3 n_out34p0 = tex_frg_34_read.rgb;
	float n_out34p1 = tex_frg_34_read.a;

// VectorOp:45
	vec3 n_out45p0 = n_out33p0 + n_out34p0;

// VectorOp:46
	vec3 n_in46p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out46p0 = n_out45p0 - n_in46p1;

// VectorDecompose:48
	float n_out48p0 = n_out35p0.x;
	float n_out48p1 = n_out35p0.y;
	float n_out48p2 = n_out35p0.z;

// VectorOp:47
	vec3 n_out47p0 = n_out46p0 * vec3(n_out48p1);

// VectorOp:53
	vec3 n_in53p1 = vec3(0.02800, 0.02800, 0.00000);
	vec3 n_out53p0 = n_out47p0 * n_in53p1;

// VectorOp:52
	vec3 n_out52p0 = n_out13p0 + n_out53p0;

// Texture:32
	vec3 n_out32p0;
	float n_out32p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out52p0.xy, 0.0);
		n_out32p0 = _tex_read.rgb;
		n_out32p1 = _tex_read.a;
	}

// Texture:49
	vec4 tex_frg_49_read = texture(tex_frg_49, n_out35p0.xy);
	vec3 n_out49p0 = tex_frg_49_read.rgb;
	float n_out49p1 = tex_frg_49_read.a;

// Texture:22
	float n_out22p0;
	float n_out22p1;
	{
		float _depth = texture(DEPTH_TEXTURE, n_out52p0.xy).r;
		n_out22p0 = _depth;
		n_out22p1 = 1.0;
	}

// ScalarOp:54
	float n_out54p0 = pow(n_out22p0, n_out22p0);

// ScalarOp:31
	float n_out31p0 = pow(n_out54p0, n_out54p0);

// ScalarOp:56
	float n_out56p0 = pow(n_out54p0, n_out54p0);

// ScalarOp:55
	float n_out55p0 = pow(n_out31p0, n_out56p0);

// ScalarOp:58
	float n_out58p0 = pow(n_out31p0, n_out56p0);

// ScalarOp:57
	float n_out57p0 = pow(n_out55p0, n_out58p0);

// ScalarOp:59
	float n_in59p1 = 225.00000;
	float n_out59p0 = pow(n_out57p0, n_in59p1);

// VectorScalarMix:51
	vec3 n_out51p0 = mix(n_out32p0, n_out49p0, n_out59p0);

// Texture:50
	vec4 tex_frg_50_read = texture(tex_frg_50, n_out35p0.xy);
	vec3 n_out50p0 = tex_frg_50_read.rgb;
	float n_out50p1 = tex_frg_50_read.a;

// VectorOp:60
	vec3 n_out60p0 = n_out51p0 * n_out50p0;

// Output:0
	ALBEDO = vec3(n_out28p0);
	METALLIC = n_out28p0;
	ROUGHNESS = n_out29p0;
	SPECULAR = n_out28p0;
	EMISSION = n_out60p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1007.66, 959.827 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 680, -80 )
nodes/vertex/2/node = SubResource( 9 )
nodes/vertex/2/position = Vector2( -1020, 360 )
nodes/vertex/3/node = SubResource( 10 )
nodes/vertex/3/position = Vector2( -820, 340 )
nodes/vertex/4/node = SubResource( 11 )
nodes/vertex/4/position = Vector2( -580, -260 )
nodes/vertex/5/node = SubResource( 12 )
nodes/vertex/5/position = Vector2( -1200, 80 )
nodes/vertex/6/node = SubResource( 13 )
nodes/vertex/6/position = Vector2( -800, 140 )
nodes/vertex/7/node = SubResource( 14 )
nodes/vertex/7/position = Vector2( -440, 100 )
nodes/vertex/8/node = SubResource( 15 )
nodes/vertex/8/position = Vector2( -180, 140 )
nodes/vertex/9/node = SubResource( 16 )
nodes/vertex/9/position = Vector2( 60, 240 )
nodes/vertex/10/node = SubResource( 2 )
nodes/vertex/10/position = Vector2( -680, -400 )
nodes/vertex/11/node = SubResource( 3 )
nodes/vertex/11/position = Vector2( -820, 440 )
nodes/vertex/12/node = SubResource( 4 )
nodes/vertex/12/position = Vector2( -440, 200 )
nodes/vertex/13/node = SubResource( 5 )
nodes/vertex/13/position = Vector2( 80, -340 )
nodes/vertex/14/node = SubResource( 6 )
nodes/vertex/14/position = Vector2( -400, -140 )
nodes/vertex/15/node = SubResource( 7 )
nodes/vertex/15/position = Vector2( -140, -120 )
nodes/vertex/16/node = SubResource( 8 )
nodes/vertex/16/position = Vector2( -260, -240 )
nodes/vertex/17/node = SubResource( 21 )
nodes/vertex/17/position = Vector2( 280, 400 )
nodes/vertex/18/node = SubResource( 22 )
nodes/vertex/18/position = Vector2( 780, 340 )
nodes/vertex/19/node = SubResource( 23 )
nodes/vertex/19/position = Vector2( 560, 380 )
nodes/vertex/20/node = SubResource( 24 )
nodes/vertex/20/position = Vector2( 1012.35, 380.836 )
nodes/vertex/21/node = SubResource( 25 )
nodes/vertex/21/position = Vector2( 260, 20 )
nodes/vertex/22/node = SubResource( 44 )
nodes/vertex/22/position = Vector2( -1002.51, 85.0995 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 6, 0, 7, 0, 3, 0, 7, 1, 7, 0, 8, 0, 8, 0, 4, 0, 8, 0, 9, 0, 2, 0, 11, 0, 11, 0, 12, 1, 12, 0, 8, 1, 6, 1, 12, 0, 4, 0, 14, 0, 15, 0, 13, 1, 13, 0, 0, 0, 14, 0, 16, 0, 9, 0, 17, 0, 17, 2, 19, 0, 19, 0, 18, 1, 17, 0, 18, 0, 17, 1, 18, 2, 18, 0, 20, 0, 20, 0, 21, 0, 21, 0, 0, 1, 10, 0, 13, 0, 5, 0, 22, 0, 22, 0, 6, 0, 14, 0, 15, 1 )
nodes/fragment/0/position = Vector2( 360, 1020 )
nodes/fragment/13/node = SubResource( 29 )
nodes/fragment/13/position = Vector2( -1060, 1140 )
nodes/fragment/22/node = SubResource( 38 )
nodes/fragment/22/position = Vector2( -940, 1300 )
nodes/fragment/28/node = SubResource( 45 )
nodes/fragment/28/position = Vector2( 380, 720 )
nodes/fragment/29/node = SubResource( 46 )
nodes/fragment/29/position = Vector2( 380, 800 )
nodes/fragment/31/node = SubResource( 48 )
nodes/fragment/31/position = Vector2( -800, 1640 )
nodes/fragment/32/node = SubResource( 49 )
nodes/fragment/32/position = Vector2( -600, 920 )
nodes/fragment/33/node = SubResource( 50 )
nodes/fragment/33/position = Vector2( -1280, -40 )
nodes/fragment/34/node = SubResource( 51 )
nodes/fragment/34/position = Vector2( -1280, 280 )
nodes/fragment/35/node = SubResource( 52 )
nodes/fragment/35/position = Vector2( -2380, 20 )
nodes/fragment/36/node = SubResource( 53 )
nodes/fragment/36/position = Vector2( -2360, 300 )
nodes/fragment/37/node = SubResource( 54 )
nodes/fragment/37/position = Vector2( -2100, 160 )
nodes/fragment/38/node = SubResource( 55 )
nodes/fragment/38/position = Vector2( -2100, 260 )
nodes/fragment/39/node = SubResource( 56 )
nodes/fragment/39/position = Vector2( -2100, 380 )
nodes/fragment/40/node = SubResource( 57 )
nodes/fragment/40/position = Vector2( -2100, 480 )
nodes/fragment/41/node = SubResource( 58 )
nodes/fragment/41/position = Vector2( -1560, 20 )
nodes/fragment/42/node = SubResource( 59 )
nodes/fragment/42/position = Vector2( -1780, 160 )
nodes/fragment/43/node = SubResource( 60 )
nodes/fragment/43/position = Vector2( -1780, 380 )
nodes/fragment/44/node = SubResource( 61 )
nodes/fragment/44/position = Vector2( -1520, 340 )
nodes/fragment/45/node = SubResource( 62 )
nodes/fragment/45/position = Vector2( -931.61, 136.807 )
nodes/fragment/46/node = SubResource( 63 )
nodes/fragment/46/position = Vector2( -700, 160 )
nodes/fragment/47/node = SubResource( 64 )
nodes/fragment/47/position = Vector2( -1020, 740 )
nodes/fragment/48/node = SubResource( 65 )
nodes/fragment/48/position = Vector2( -2280, 700 )
nodes/fragment/49/node = SubResource( 66 )
nodes/fragment/49/position = Vector2( -1280, 800 )
nodes/fragment/50/node = SubResource( 67 )
nodes/fragment/50/position = Vector2( -1280, 1140 )
nodes/fragment/51/node = SubResource( 68 )
nodes/fragment/51/position = Vector2( -260, 960 )
nodes/fragment/52/node = SubResource( 69 )
nodes/fragment/52/position = Vector2( -680, 740 )
nodes/fragment/53/node = SubResource( 70 )
nodes/fragment/53/position = Vector2( -860, 740 )
nodes/fragment/54/node = SubResource( 71 )
nodes/fragment/54/position = Vector2( -1020, 1680 )
nodes/fragment/55/node = SubResource( 72 )
nodes/fragment/55/position = Vector2( -580, 1640 )
nodes/fragment/56/node = SubResource( 73 )
nodes/fragment/56/position = Vector2( -800, 1840 )
nodes/fragment/57/node = SubResource( 74 )
nodes/fragment/57/position = Vector2( -380, 1740 )
nodes/fragment/58/node = SubResource( 75 )
nodes/fragment/58/position = Vector2( -580, 1840 )
nodes/fragment/59/node = SubResource( 76 )
nodes/fragment/59/position = Vector2( -200, 1740 )
nodes/fragment/60/node = SubResource( 77 )
nodes/fragment/60/position = Vector2( 69.6045, 1117.19 )
nodes/fragment/connections = PoolIntArray( 28, 0, 0, 2, 29, 0, 0, 3, 28, 0, 0, 4, 28, 0, 0, 0, 36, 0, 37, 0, 36, 0, 38, 0, 36, 0, 39, 0, 36, 0, 40, 0, 37, 0, 42, 0, 38, 0, 42, 1, 39, 0, 43, 0, 40, 0, 43, 1, 43, 0, 44, 1, 44, 0, 34, 0, 35, 0, 44, 0, 35, 0, 41, 0, 42, 0, 41, 1, 41, 0, 33, 0, 33, 0, 45, 0, 34, 0, 45, 1, 45, 0, 46, 0, 46, 0, 47, 0, 35, 0, 48, 0, 48, 1, 47, 1, 35, 0, 49, 0, 35, 0, 50, 0, 32, 0, 51, 0, 49, 0, 51, 1, 13, 0, 52, 0, 52, 0, 32, 0, 47, 0, 53, 0, 53, 0, 52, 1, 52, 0, 22, 0, 22, 0, 54, 0, 54, 0, 31, 0, 31, 0, 55, 0, 22, 0, 54, 1, 54, 0, 31, 1, 54, 0, 56, 0, 54, 0, 56, 1, 56, 0, 55, 1, 55, 0, 57, 0, 31, 0, 58, 0, 56, 0, 58, 1, 58, 0, 57, 1, 57, 0, 59, 0, 59, 0, 51, 2, 51, 0, 60, 0, 50, 0, 60, 1, 60, 0, 0, 5 )
