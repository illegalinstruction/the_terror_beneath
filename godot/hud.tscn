[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=36]
script/source = "# 
#  _the terror_               
# | |        | |              
# | |__   ___| | _____      __
# | '_ \\ / _ \\ |/ _ \\ \\ /\\ / /
# | |_) |  __/ | (_) \\ V  V / 
# |_.__/ \\___|_|\\___/ \\_/\\_/ 
#
# Copyright 2022 Oregon Institute of Technology
# 
# Permission is hereby granted, free of charge, to any person obtaining 
# a copy of this software and associated documentation files (the 
# \"Software\"), to deal in the Software without restriction, including 
# without limitation the rights to use, copy, modify, merge, publish, 
# distribute, sublicense, and/or sell copies of the Software, and to 
# permit persons to whom the Software is furnished to do so, subject to 
# the following conditions:
# 
# * The above copyright notice and this permission notice shall be 
# 	included in all copies or substantial portions of the Software.
# 
# * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, 
# 	EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
# 	OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY 
#	CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, 
#	TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
#	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#                                 

extends Node2D;

#===============================================================================
#-------------------------------------------------------------------------------
# helper class to let the visible representation of sonar reflections manage 
# themselves.

var sonar_shock_ring_array              = [];
const SONAR_LIFETIME_TICKS      : int   = 150;  # length anim runs (in frames) 
var actual_sonar_array_length   : int   = 0;    # ugly workaround for a race cond

class SONAR_SHOCK_RING:
    extends Object;
    
    var pos         : Vector2;
    var col         : Color = Color.white;
    var anim_clock  : int = SONAR_LIFETIME_TICKS;
    var parent      : Node2D;
    var dest        : Array;
    var distance    : float;
    var caption     : String;
    
    #==========================
    
    func _init(in_pos: Vector2, in_distance : float, in_caption: String, in_dest: Array, in_parent:Node2D):
        self.pos    = in_pos;
        self.dest   = in_dest; 
        self.parent = in_parent;
        self.distance = in_distance;
        self.caption = in_caption;
        in_dest.append(self);
        return;

    #==========================
    
    func tick():
        # expand over time
        anim_clock = anim_clock - 1;
        
        # grow fainter over time
        col.a =  float(anim_clock / float( SONAR_LIFETIME_TICKS));
        
        # are we dead/invisible now? delete ourselves
        #if (anim_clock < 1):
        #    dest.erase(self);
        # moved to outer class' _draw() method - please see discord discussion
        # for why (possible thread-safety problem)    

#-------------------------------------------------------------------------------

func spawn_sonar_ping_effect(in_pos : Vector2, in_distance : float, in_caption: String=\"\"):
    var _unused: SONAR_SHOCK_RING = SONAR_SHOCK_RING.new(in_pos, 
        in_distance, 
        in_caption,
        sonar_shock_ring_array,
        self);

    actual_sonar_array_length += 1;
    
#-------------------------------------------------------------------------------
#== end sonar shock ring stuff =================================================


#---------------------------------------------------------------------------------------------------

func _ready():
    set_process(true);
    return;

#--------------------------------------------------------------------

func _process(_ignore):
    return;
"

[node name="hud" type="Node2D"]
script = SubResource( 36 )

[node name="border" type="Sprite" parent="."]
