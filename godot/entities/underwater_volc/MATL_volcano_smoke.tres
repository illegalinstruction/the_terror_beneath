[gd_resource type="ShaderMaterial" load_steps=33 format=2]

[ext_resource path="res://entities/underwater_volc/volc_smoke/smoke_alpha_01.png" type="Texture" id=1]
[ext_resource path="res://entities/underwater_volc/volc_smoke/smoke_alpha_03.png" type="Texture" id=2]
[ext_resource path="res://entities/underwater_volc/volc_smoke/smoke_alpha_02.png" type="Texture" id=3]
[ext_resource path="res://entities/underwater_volc/volc_smoke/smoke_normal_01.png" type="Texture" id=4]
[ext_resource path="res://entities/underwater_volc/volc_smoke/smoke_normal_02.png" type="Texture" id=5]

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=25]
default_input_values = [ 0, 0.0, 1, 21.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=3]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 6.21 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=20]
constant = Vector3( 0.1, 0.105, 0.09 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=21]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=22]
default_input_values = [ 0, Vector3( 0.5, 0.5, 1 ), 1, Vector3( 1, 1, 1 ), 2, 0.5 ]

[sub_resource type="VisualShaderNodeTexture" id=8]
output_port_for_preview = 0
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeScalarOp" id=23]

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "offset"
default_value_enabled = true

[sub_resource type="VisualShaderNodeScalarOp" id=31]

[sub_resource type="VisualShaderNodeVectorDecompose" id=32]

[sub_resource type="VisualShaderNodeScalarClamp" id=33]

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=10]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = ExtResource( 5 )

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=14]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[sub_resource type="VisualShaderNodeVectorCompose" id=16]

[sub_resource type="VisualShaderNodeVectorDecompose" id=17]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShader" id=19]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_frg_3;
uniform float offset = 0;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_6;



void vertex() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out4p0.x;
	float n_out3p1 = n_out4p0.y;
	float n_out3p2 = n_out4p0.z;

// VectorCompose:2
	float n_in2p2 = 0.00000;
	vec3 n_out2p0 = vec3(n_out3p1, n_out3p0, n_in2p2);

// Output:0
	UV = n_out2p0.xy;

}

void fragment() {
// Vector:17
	vec3 n_out17p0 = vec3(0.100000, 0.105000, 0.090000);

// Input:7
	vec3 n_out7p0 = vec3(UV, 0.0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out7p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Input:10
	float n_out10p0 = TIME;

// ScalarUniform:21
	float n_out21p0 = offset;

// ScalarOp:20
	float n_out20p0 = n_out10p0 + n_out21p0;

// ScalarOp:11
	float n_in11p1 = 21.00000;
	float n_out11p0 = n_out20p0 / n_in11p1;

// VectorCompose:9
	float n_in9p0 = 0.00000;
	float n_in9p2 = 0.00000;
	vec3 n_out9p0 = vec3(n_in9p0, n_out11p0, n_in9p2);

// VectorOp:8
	vec3 n_out8p0 = n_out7p0 + n_out9p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out8p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarOp:15
	float n_out15p0 = dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)) * dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarOp:14
	float n_in14p1 = 6.21000;
	float n_out14p0 = n_out20p0 / n_in14p1;

// VectorCompose:13
	float n_in13p0 = 0.00000;
	float n_in13p2 = 0.00000;
	vec3 n_out13p0 = vec3(n_in13p0, n_out14p0, n_in13p2);

// VectorOp:12
	vec3 n_out12p0 = n_out7p0 + n_out13p0;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out12p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// VectorDecompose:23
	float n_out23p0 = n_out7p0.x;
	float n_out23p1 = n_out7p0.y;
	float n_out23p2 = n_out7p0.z;

// ScalarOp:22
	float n_out22p0 = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333)) + n_out23p1;

// ScalarClamp:24
	float n_in24p1 = 0.00000;
	float n_in24p2 = 1.00000;
	float n_out24p0 = clamp(n_out22p0, n_in24p1, n_in24p2);

// ScalarOp:16
	float n_out16p0 = n_out15p0 * n_out24p0;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out12p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out8p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorScalarMix:18
	vec3 n_out18p0 = mix(n_out5p0, n_out6p0, n_out6p1);

// VectorScalarMix:19
	vec3 n_in19p0 = vec3(0.50000, 0.50000, 1.00000);
	vec3 n_out19p0 = mix(n_in19p0, n_out18p0, dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)));

// Output:0
	ALBEDO = n_out17p0;
	ALPHA = n_out16p0;
	NORMALMAP = n_out19p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -2433.1, 224.459 )
nodes/vertex/2/node = SubResource( 16 )
nodes/vertex/2/position = Vector2( 100, 220 )
nodes/vertex/3/node = SubResource( 17 )
nodes/vertex/3/position = Vector2( -120, 200 )
nodes/vertex/4/node = SubResource( 18 )
nodes/vertex/4/position = Vector2( -224.831, 204.692 )
nodes/vertex/connections = PoolIntArray( 2, 0, 0, 4, 3, 0, 2, 1, 3, 1, 2, 0, 4, 0, 3, 0 )
nodes/fragment/0/position = Vector2( 980, -60 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( -240, -60 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( -240, -280 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( -240, 260 )
nodes/fragment/5/node = SubResource( 11 )
nodes/fragment/5/position = Vector2( 80, 600 )
nodes/fragment/6/node = SubResource( 12 )
nodes/fragment/6/position = Vector2( 80, 380 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( -1900, 20 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( -960.333, 141.082 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( -1280, 260 )
nodes/fragment/10/node = SubResource( 24 )
nodes/fragment/10/position = Vector2( -2040, 280 )
nodes/fragment/11/node = SubResource( 25 )
nodes/fragment/11/position = Vector2( -1440, 260 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -960, 360 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -1260, 400 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -1440, 400 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 20, 40 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 200, 80 )
nodes/fragment/17/node = SubResource( 20 )
nodes/fragment/17/position = Vector2( 60, -160 )
nodes/fragment/18/node = SubResource( 21 )
nodes/fragment/18/position = Vector2( 420, 460 )
nodes/fragment/19/node = SubResource( 22 )
nodes/fragment/19/position = Vector2( 702.688, 337.435 )
nodes/fragment/20/node = SubResource( 23 )
nodes/fragment/20/position = Vector2( -1826.12, 395.044 )
nodes/fragment/21/node = SubResource( 26 )
nodes/fragment/21/position = Vector2( -2120, 480 )
nodes/fragment/22/node = SubResource( 31 )
nodes/fragment/22/position = Vector2( 40, 240 )
nodes/fragment/23/node = SubResource( 32 )
nodes/fragment/23/position = Vector2( -1315.64, -140.477 )
nodes/fragment/24/node = SubResource( 33 )
nodes/fragment/24/position = Vector2( 218.682, 289.208 )
nodes/fragment/connections = PoolIntArray( 8, 0, 2, 0, 12, 0, 4, 0, 9, 0, 8, 1, 11, 0, 9, 1, 14, 0, 13, 1, 13, 0, 12, 1, 7, 0, 3, 0, 7, 0, 8, 0, 7, 0, 12, 0, 2, 0, 15, 1, 3, 0, 15, 0, 15, 0, 16, 0, 16, 0, 0, 1, 17, 0, 0, 0, 8, 0, 6, 0, 12, 0, 5, 0, 5, 0, 18, 0, 6, 0, 18, 1, 6, 1, 18, 2, 18, 0, 19, 1, 3, 0, 19, 2, 19, 0, 0, 8, 10, 0, 20, 0, 20, 0, 11, 0, 20, 0, 14, 0, 21, 0, 20, 1, 4, 0, 22, 0, 7, 0, 23, 0, 23, 1, 22, 1, 22, 0, 24, 0, 24, 0, 16, 1 )

[resource]
resource_local_to_scene = true
shader = SubResource( 19 )
shader_param/offset = 4.278
