[gd_resource type="ShaderMaterial" load_steps=27 format=2]

[ext_resource path="res://entities/comb_jelly/textures/combs_layer_2.png" type="Texture" id=1]
[ext_resource path="res://entities/comb_jelly/textures/combs_layer_3.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 0.3 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.7 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
function = 1

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="VisualShaderNodeVectorCompose" id=8]

[sub_resource type="VisualShaderNodeScalarOp" id=9]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 0.6 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=11]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=12]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=13]
output_port_for_preview = 0
default_input_values = [ 0, -1.0, 1, 3.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=16]
output_port_for_preview = 0
default_input_values = [ 0, -1.25, 1, 2.75, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 1.371 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.75 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeColorFunc" id=22]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=23]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShader" id=1]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D tex_frg_13;
uniform sampler2D tex_frg_6;



void vertex() {
// Output:0

}

void fragment() {
// Texture:13
	vec4 tex_frg_13_read = texture(tex_frg_13, UV.xy);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:18
	float n_in18p1 = 0.60000;
	float n_out18p0 = n_out2p0 * n_in18p1;

// ScalarOp:4
	float n_in4p1 = 0.75000;
	float n_out4p0 = n_out2p0 / n_in4p1;

// ScalarFunc:3
	float n_out3p0 = sin(n_out4p0);

// ScalarSmoothStep:20
	float n_in20p0 = -1.00000;
	float n_in20p1 = 3.00000;
	float n_out20p0 = smoothstep(n_in20p0, n_in20p1, n_out3p0);

// ScalarOp:17
	float n_out17p0 = n_out18p0 + n_out20p0;

// Input:14
	vec3 n_out14p0 = vec3(UV, 0.0);

// VectorDecompose:15
	float n_out15p0 = n_out14p0.x;
	float n_out15p1 = n_out14p0.y;
	float n_out15p2 = n_out14p0.z;

// ScalarOp:19
	float n_out19p0 = n_out17p0 - n_out15p0;

// VectorCompose:16
	float n_in16p2 = 0.00000;
	vec3 n_out16p0 = vec3(n_out19p0, n_out15p1, n_in16p2);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out16p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// ScalarOp:21
	float n_out21p0 = n_out13p1 * n_out6p1;

// ColorFunc:7
	vec3 n_out7p0;
	{
		vec3 c = n_out6p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out7p0 = vec3(max2, max2, max2);
	}

// ScalarOp:9
	float n_in9p1 = 2.00000;
	float n_out9p0 = n_out2p0 / n_in9p1;

// ScalarFunc:12
	float n_out12p0 = cos(n_out9p0);

// ScalarOp:10
	float n_in10p1 = 0.30000;
	float n_out10p0 = n_out12p0 * n_in10p1;

// ScalarOp:11
	float n_in11p1 = 0.70000;
	float n_out11p0 = n_out10p0 + n_in11p1;

// VectorScalarMix:8
	vec3 n_out8p0 = mix(n_out7p0, n_out6p0, n_out11p0);

// ScalarOp:24
	float n_in24p1 = 1.37100;
	float n_out24p0 = n_out2p0 / n_in24p1;

// ScalarFunc:25
	float n_out25p0 = sin(n_out24p0);

// ScalarSmoothStep:23
	float n_in23p0 = -1.25000;
	float n_in23p1 = 2.75000;
	float n_out23p0 = smoothstep(n_in23p0, n_in23p1, n_out25p0);

// VectorOp:22
	vec3 n_out22p0 = n_out8p0 * vec3(n_out23p0);

// Output:0
	ALPHA = n_out21p0;
	EMISSION = n_out22p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -480.357, 58.5931 )
nodes/fragment/0/position = Vector2( 1300, -80 )
nodes/fragment/2/node = SubResource( 12 )
nodes/fragment/2/position = Vector2( 100, 400 )
nodes/fragment/3/node = SubResource( 19 )
nodes/fragment/3/position = Vector2( -580, 240 )
nodes/fragment/4/node = SubResource( 20 )
nodes/fragment/4/position = Vector2( -760, 240 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( -500, -160 )
nodes/fragment/7/node = SubResource( 22 )
nodes/fragment/7/position = Vector2( 120, -60 )
nodes/fragment/8/node = SubResource( 23 )
nodes/fragment/8/position = Vector2( 380, -60 )
nodes/fragment/9/node = SubResource( 24 )
nodes/fragment/9/position = Vector2( -700, 400 )
nodes/fragment/10/node = SubResource( 2 )
nodes/fragment/10/position = Vector2( -360, 400 )
nodes/fragment/11/node = SubResource( 3 )
nodes/fragment/11/position = Vector2( -160, 360 )
nodes/fragment/12/node = SubResource( 4 )
nodes/fragment/12/position = Vector2( -560, 420 )
nodes/fragment/13/node = SubResource( 5 )
nodes/fragment/13/position = Vector2( -140, -80 )
nodes/fragment/14/node = SubResource( 6 )
nodes/fragment/14/position = Vector2( -1160, -60 )
nodes/fragment/15/node = SubResource( 7 )
nodes/fragment/15/position = Vector2( -960, -80 )
nodes/fragment/16/node = SubResource( 8 )
nodes/fragment/16/position = Vector2( -640, -100 )
nodes/fragment/17/node = SubResource( 9 )
nodes/fragment/17/position = Vector2( -860, 80 )
nodes/fragment/18/node = SubResource( 10 )
nodes/fragment/18/position = Vector2( -1040, 40 )
nodes/fragment/19/node = SubResource( 11 )
nodes/fragment/19/position = Vector2( -640, 40 )
nodes/fragment/20/node = SubResource( 13 )
nodes/fragment/20/position = Vector2( -1060, 160 )
nodes/fragment/21/node = SubResource( 14 )
nodes/fragment/21/position = Vector2( 67.0723, 137.573 )
nodes/fragment/22/node = SubResource( 15 )
nodes/fragment/22/position = Vector2( 760.204, -78.4006 )
nodes/fragment/23/node = SubResource( 16 )
nodes/fragment/23/position = Vector2( 560, 20 )
nodes/fragment/24/node = SubResource( 17 )
nodes/fragment/24/position = Vector2( 435.699, 452.198 )
nodes/fragment/25/node = SubResource( 18 )
nodes/fragment/25/position = Vector2( 519.219, 361.478 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 4, 0, 3, 0, 6, 0, 7, 0, 2, 0, 9, 0, 10, 0, 11, 0, 11, 0, 8, 2, 9, 0, 12, 0, 12, 0, 10, 0, 6, 0, 8, 1, 7, 0, 8, 0, 14, 0, 15, 0, 2, 0, 18, 0, 18, 0, 17, 0, 17, 0, 19, 0, 15, 0, 19, 1, 19, 0, 16, 0, 16, 0, 6, 0, 15, 1, 16, 1, 3, 0, 20, 2, 20, 0, 17, 1, 13, 1, 21, 0, 6, 1, 21, 1, 21, 0, 0, 1, 8, 0, 22, 0, 23, 0, 22, 1, 22, 0, 0, 5, 2, 0, 24, 0, 24, 0, 25, 0, 25, 0, 23, 2 )

[resource]
shader = SubResource( 1 )
