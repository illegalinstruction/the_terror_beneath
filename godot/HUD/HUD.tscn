[gd_scene load_steps=7 format=2]

[ext_resource path="res://HUD/callouts/lower_left_joyp.png" type="Texture" id=1]
[ext_resource path="res://HUD/callouts/lower_left_keyb.png" type="Texture" id=2]
[ext_resource path="res://HUD/depth_gauge/depth_gauge_base.png" type="Texture" id=3]
[ext_resource path="res://HUD/depth_gauge/depth_gauge_needle.png" type="Texture" id=4]
[ext_resource path="res://HUD/elec_gauge/elec_gauge.png" type="Texture" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D;

export var BATTERY_SCALE : float = 0.65;
export var GAUGE_SCALE : float = 0.48;
export var CALLOUT_SCALE : float = 0.39;
export var SUB_DEPTH : float = 0.0;
export var SUB_MAX_DEPTH : float = -750.0;
export var O2_PERCENT : float = 0.0;
export var BATT_PERCENT : float = 0.0;

const NEEDLE_START = -129.0;
const NEEDLE_END = 129.5;

#===============================================================================
#-------------------------------------------------------------------------------
# 16: sonar
export var SONAR_EXPANSION_SPEED : float = 2.75;
export var SONAR_OPACITY_START : float =  0.8;
export var SONAR_OPACITY_ATTENUATE : float =  0.95;

var array_size_tmp = \"\";

#------
class SONAR_EFFECT:
	var centre : Vector2;
	var size : float;
	var alpha : float;

var sonar_effect_array = [];
#------

#-------------------------------------------------------------------------------

func sonar_spawn_effect(coords:Vector2, is_echo:bool = false):
	var tmp : SONAR_EFFECT = SONAR_EFFECT.new();
	tmp.centre = coords;
	tmp.size = 0.0;
	tmp.alpha = SONAR_OPACITY_START;
	sonar_effect_array.append(tmp);
	return;

#-------------------------------------------------------------------------------

func sonar_paint_all():
	for idx in range (0, (sonar_effect_array.size())):
		draw_circle(sonar_effect_array[idx].centre, 
					sonar_effect_array[idx].size,
					Color(1.0, 1.0, 1.0, sonar_effect_array[idx].alpha));
	return;

#-------------------------------------------------------------------------------

func sonar_animate_all():
	array_size_tmp = (\"ary size: \"+str(sonar_effect_array.size()));
	
	if (sonar_effect_array.size() == 0):
		return;
	for idx in range (0, (sonar_effect_array.size())):
		if (idx <= (sonar_effect_array.size() -1)):
			sonar_effect_array[idx].size  = (sonar_effect_array[idx].size + SONAR_EXPANSION_SPEED);
			sonar_effect_array[idx].alpha = (sonar_effect_array[idx].alpha * SONAR_OPACITY_ATTENUATE);
			if (sonar_effect_array[idx].alpha < 0.001):
				sonar_effect_array.remove(idx);
	return;

#-------------------------------------------------------------------------------
#===============================================================================

func _ready():
	if (Global.use_joystick):
		$LowerLeftKeyb.hide();
		$LowerLeftJoyp.show();
	else:
		$LowerLeftKeyb.show();
		$LowerLeftJoyp.hide();
	
	$DepthGaugeBase/DepthGaugeNeedle.rotation_degrees = -129.0;

	$Label.add_font_override(\"font\",Global.ui_font);

	set_process(true);
	return;

#-------------------------------------------------------------------------------

func _process(_ignored):
	# --- gracefully handle resize
	$LowerLeftJoyp.scale.x = (get_viewport().size.x / 1280.0) * CALLOUT_SCALE;  
	$LowerLeftJoyp.scale.y = $LowerLeftJoyp.scale.x;
	$LowerLeftJoyp.position.y = get_viewport().size.y;

	$LowerLeftKeyb.scale.x = (get_viewport().size.x / 1280.0) * CALLOUT_SCALE;  
	$LowerLeftKeyb.scale.y = $LowerLeftKeyb.scale.x;
	$LowerLeftKeyb.position.y = get_viewport().size.y;

	$DepthGaugeBase.scale.x = (get_viewport().size.x / 1280.0) * GAUGE_SCALE;
	$DepthGaugeBase.scale.y = $DepthGaugeBase.scale.x;
	$DepthGaugeBase.position.x = get_viewport().size.x - (($DepthGaugeBase.texture.get_size().x / 2.0) * $DepthGaugeBase.scale.x);
	$DepthGaugeBase.position.y = get_viewport().size.y - (($DepthGaugeBase.texture.get_size().y / 2.0) * $DepthGaugeBase.scale.y);


	$ElecGauge.scale.x = (get_viewport().size.x / 1280.0) * BATTERY_SCALE;
	$ElecGauge.scale.y = $ElecGauge.scale.x;
	$ElecGauge.position.x = get_viewport().size.x - (($ElecGauge.texture.get_size().x / 2.0) * $ElecGauge.scale.x);
	$ElecGauge.position.y = get_viewport().size.y /2.0;
	
	# --- animate depth gauge
	$DepthGaugeBase/DepthGaugeNeedle.rotation_degrees = ((NEEDLE_END - NEEDLE_START) * (SUB_DEPTH / SUB_MAX_DEPTH)) + NEEDLE_START;
	
	# --- update text 
	var tmp = \"O2: %.1f %% \\n Battery: %.1f %% \\n Depth: %d M\" %  [O2_PERCENT, BATT_PERCENT, int(0 - SUB_DEPTH)];
	$Label.set_text(tmp);
	$Label.anchor_right = int(get_viewport().size.x);
	$Label.anchor_bottom = int(get_viewport().size.y);
	
	# 16 - sonar visual effect
	sonar_animate_all();
	update(); # required to force a repaint

#----------------------------------------------------------------------------

func _draw():
	# 16 - sonar visual effect
	sonar_paint_all();

#----------------------------------------------------------------------------
"

[node name="HUD" type="Node2D"]
script = SubResource( 1 )
SUB_MAX_DEPTH = -2500.0
SONAR_EXPANSION_SPEED = 3.944

[node name="LowerLeftJoyp" type="Sprite" parent="."]
position = Vector2( 0, 720 )
texture = ExtResource( 1 )
centered = false
offset = Vector2( 0, -512 )

[node name="LowerLeftKeyb" type="Sprite" parent="."]
position = Vector2( 0, 720 )
texture = ExtResource( 2 )
centered = false
offset = Vector2( 0, -512 )

[node name="DepthGaugeBase" type="Sprite" parent="."]
position = Vector2( 1024, 464 )
texture = ExtResource( 3 )

[node name="DepthGaugeNeedle" type="Sprite" parent="DepthGaugeBase"]
rotation = -2.25846
texture = ExtResource( 4 )

[node name="Label" type="Label" parent="."]
margin_right = 1264.0
margin_bottom = 704.0
align = 2
valign = 2

[node name="ElecGauge" type="Sprite" parent="."]
position = Vector2( 1157, 236 )
texture = ExtResource( 5 )
