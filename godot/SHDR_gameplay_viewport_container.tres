[gd_resource type="VisualShader" load_steps=28 format=2]

[ext_resource path="res://ocean/ocean-underwater-deform-x.png" type="Texture" id=1]
[ext_resource path="res://ocean/ocean-underwater-deform-y.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 26.8945 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, -23.487 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 63.1 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]

[sub_resource type="VisualShaderNodeVectorCompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]

[sub_resource type="VisualShaderNodeVectorCompose" id=9]

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, -2000.0 ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=13]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=15]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeTexture" id=17]

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0.1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "sub_depth"
hint = 1
min = -2000.0
max = 0.0
default_value_enabled = true

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=22]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=23]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, 41.0 ]
operator = 3

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_7;
uniform sampler2D tex_frg_6;
uniform float sub_depth : hint_range(-2000, 0) = 0;
uniform sampler2D tex_frg_27;



void vertex() {
// Output:0

}

void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:8
	float n_out8p0 = n_out4p0.x;
	float n_out8p1 = n_out4p0.y;
	float n_out8p2 = n_out4p0.z;

// Input:3
	float n_out3p0 = TIME;

// ScalarOp:9
	float n_in9p1 = 41.00000;
	float n_out9p0 = n_out3p0 / n_in9p1;

// ScalarOp:13
	float n_out13p0 = n_out8p0 + n_out9p0;

// ScalarOp:10
	float n_in10p1 = 26.89450;
	float n_out10p0 = n_out3p0 / n_in10p1;

// ScalarOp:14
	float n_out14p0 = n_out10p0 + n_out8p1;

// VectorCompose:15
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_out13p0, n_out14p0, n_in15p2);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out15p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// ScalarOp:11
	float n_in11p1 = -23.48700;
	float n_out11p0 = n_out3p0 / n_in11p1;

// VectorDecompose:19
	float n_out19p0 = n_out4p0.x;
	float n_out19p1 = n_out4p0.y;
	float n_out19p2 = n_out4p0.z;

// ScalarOp:16
	float n_out16p0 = n_out11p0 + n_out19p0;

// ScalarOp:12
	float n_in12p1 = 63.10000;
	float n_out12p0 = n_out3p0 / n_in12p1;

// ScalarOp:17
	float n_out17p0 = n_out12p0 + n_out19p1;

// VectorCompose:18
	float n_in18p2 = 0.00000;
	vec3 n_out18p0 = vec3(n_out16p0, n_out17p0, n_in18p2);

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, n_out18p0.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// VectorOp:20
	vec3 n_out20p0 = n_out7p0 + n_out6p0;

// VectorOp:22
	vec3 n_in22p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out22p0 = n_out20p0 - n_in22p1;

// ScalarUniform:5
	float n_out5p0 = sub_depth;

// ScalarOp:21
	float n_in21p1 = -2000.00000;
	float n_out21p0 = n_out5p0 / n_in21p1;

// VectorCompose:24
	float n_in24p2 = 0.00000;
	vec3 n_out24p0 = vec3(n_out21p0, n_out21p0, n_in24p2);

// VectorOp:23
	vec3 n_out23p0 = n_out22p0 * n_out24p0;

// VectorOp:28
	vec3 n_in28p1 = vec3(0.10000, 0.10000, 0.00000);
	vec3 n_out28p0 = n_out23p0 * n_in28p1;

// VectorOp:26
	vec3 n_out26p0 = n_out28p0 + n_out4p0;

// Texture:27
	vec4 tex_frg_27_read = texture(tex_frg_27, n_out26p0.xy);
	vec3 n_out27p0 = tex_frg_27_read.rgb;
	float n_out27p1 = tex_frg_27_read.a;

// Output:0
	COLOR.rgb = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -2549.97, 554.142 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 680, -20 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( -1940, 120 )
nodes/fragment/4/node = SubResource( 19 )
nodes/fragment/4/position = Vector2( -1640, 120 )
nodes/fragment/5/node = SubResource( 20 )
nodes/fragment/5/position = Vector2( -1360, 600 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( -660, 280 )
nodes/fragment/7/node = SubResource( 22 )
nodes/fragment/7/position = Vector2( -680, -280 )
nodes/fragment/8/node = SubResource( 23 )
nodes/fragment/8/position = Vector2( -1360, 20 )
nodes/fragment/9/node = SubResource( 24 )
nodes/fragment/9/position = Vector2( -1380, -240 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1380, -140 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -1320, 320 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1320, 440 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -1120, -240 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -1120, -140 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -908.165, -174.423 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -1120, 340 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -1120, 440 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( -920, 400 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( -1360, 140 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( -480, -20 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( -987.424, 644.506 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( -280, -20 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -80, -20 )
nodes/fragment/24/node = SubResource( 15 )
nodes/fragment/24/position = Vector2( -664.155, 632.878 )
nodes/fragment/26/node = SubResource( 16 )
nodes/fragment/26/position = Vector2( 280, 60 )
nodes/fragment/27/node = SubResource( 17 )
nodes/fragment/27/position = Vector2( 480, 20 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( 120, -40 )
nodes/fragment/connections = PoolIntArray( 8, 0, 13, 0, 9, 0, 13, 1, 8, 1, 14, 1, 10, 0, 14, 0, 13, 0, 15, 0, 14, 0, 15, 1, 15, 0, 7, 0, 16, 0, 18, 0, 17, 0, 18, 1, 11, 0, 16, 0, 19, 0, 16, 1, 19, 1, 17, 1, 12, 0, 17, 0, 18, 0, 6, 0, 7, 0, 20, 0, 6, 0, 20, 1, 5, 0, 21, 0, 20, 0, 22, 0, 22, 0, 23, 0, 21, 0, 24, 0, 21, 0, 24, 1, 24, 0, 23, 1, 26, 0, 27, 0, 27, 0, 0, 0, 4, 0, 8, 0, 4, 0, 19, 0, 3, 0, 11, 0, 3, 0, 12, 0, 3, 0, 9, 0, 3, 0, 10, 0, 4, 0, 26, 1, 23, 0, 28, 0, 28, 0, 26, 0 )
